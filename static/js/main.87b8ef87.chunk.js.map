{"version":3,"sources":["components/Contacts/Contacts.module.scss","components/Filter/Filter.module.scss","hooks/useLocalStorage.js","components/Section/Section.js","components/Search/Search.js","components/Contacts/Contact.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","index.js","components/Search/Search.module.scss","components/Section/Section.module.scss"],"names":["module","exports","useLocalStorage","key","defaultValue","serialize","JSON","stringify","deserialize","parse","useState","localStorage","getItem","state","setState","useEffect","setItem","Section","children","title","className","s","Container","Title","Search","onSubmit","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","SearchForm","preventDefault","Form","type","pattern","required","onChange","Button","Contact","id","deleteContact","onClick","Contacts","contacts","length","map","item","Filter","App","setContacts","filter","setFilter","filterContact","useMemo","normalizeFilter","toLowerCase","contact","includes","data","isUniqueName","find","elem","alert","text","userId","nanoid","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87b8ef87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"Contacts_Contact__2IJ0A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__3a1iy\"};","import { useState, useEffect } from 'react';\r\nconst useLocalStorage = (\r\n  key,\r\n  defaultValue,\r\n  serialize = JSON.stringify,\r\n  deserialize = JSON.parse,\r\n) => {\r\n  const [state, setState] = useState(() => {\r\n    return deserialize(localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n  useEffect(() => localStorage.setItem(key, serialize(state)), [key, state]);\r\n  return [state, setState];\r\n};\r\nexport default useLocalStorage;\r\n","import PropTypes from 'prop-types';\nimport s from './Section.module.scss';\n\nconst Section = ({ children, title }) => {\n  return (\n    <section className={s.Section}>\n      <div className={s.Container}>\n        <h2 className={s.Title}>{title}</h2>\n        {children}\n      </div>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Search.module.scss';\n\nconst Search = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.SearchForm} onSubmit={handleSubmit}>\n      <label className={s.Form}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.Form}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={s.Button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\nSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default Search;\n","import PropTypes from 'prop-types';\nimport s from './Contacts.module.scss';\n\nconst Contact = ({ name, number, id, deleteContact }) => {\n  return (\n    <li className={s.Contact}>\n      <p>\n        {name}:{number}\n      </p>\n      <button onClick={() => deleteContact(id)}>Delete</button>\n    </li>\n  );\n};\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\nexport default Contact;\n","import PropTypes from 'prop-types';\nimport Contact from './Contact';\n\nconst Contacts = ({ contacts, deleteContact }) => {\n  return (\n    <ul>\n      {contacts.length > 0 &&\n        contacts.map(item => (\n          <Contact\n            key={item.id}\n            name={item.name}\n            number={item.number}\n            id={item.id}\n            deleteContact={deleteContact}\n          />\n        ))}\n    </ul>\n  );\n};\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\nexport default Contacts;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.Filter}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={onChange}\n        value={value}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useMemo } from 'react';\nimport useLocalStorage from './hooks/useLocalStorage.js';\nimport Section from 'components/Section/Section';\nimport Search from 'components/Search/Search';\nimport Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport { alert } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport { nanoid } from 'nanoid';\n\nconst App = () => {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const formSubmitHandler = data => {\n    let isUniqueName = contacts.find(elem => elem.name.includes(data.name));\n\n    if (!isUniqueName) {\n      const userId = { id: nanoid() };\n      setContacts(contacts => [...contacts, { ...userId, ...data }]);\n    } else {\n      const myAlert = alert({\n        title: 'Alert',\n        text: `${isUniqueName.name} is already in contacts`,\n      });\n    }\n  };\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n    setFilter(value);\n  };\n  const deleteContact = contactId => {\n    setContacts(contacts =>\n      contacts.filter(contact => contact.id !== contactId),\n    );\n  };\n  const filterContact = useMemo(() => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  }, [contacts, filter]);\n\n  return (\n    <>\n      <Section title={'Phonebook'}>\n        <Search onSubmit={formSubmitHandler} />\n      </Section>\n      <Section title={'Contacts'}>\n        <Filter value={filter} onChange={handleChange} />\n        <Contacts contacts={filterContact} deleteContact={deleteContact} />\n      </Section>\n    </>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './style/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Search_SearchForm__1GZuf\",\"Button\":\"Search_Button__1luAA\",\"Form\":\"Search_Form__2ELp5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1Wgbj\",\"Container\":\"Section_Container__3WJvP\",\"Title\":\"Section_Title__3GKhh\"};"],"sourceRoot":""}